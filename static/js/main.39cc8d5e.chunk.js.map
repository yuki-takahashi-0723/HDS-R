{"version":3,"sources":["questionItem/SelectButton.jsx","questionItem/SelectCheckBox.jsx","questionItem/Counter.jsx","questionItem/MiniSpecer.jsx","img/wheelchair-3948122_1920.jpg","pages/Hoom.jsx","pages/Result.jsx","data.js","pages/Test.jsx","App.js","index.js"],"names":["SelectButton","props","Button","variant","color","label","onClick","style","LabelSpan","styled","span","SelectCheckBox","Checkbox","onChange","point","state","id","DaialInput","input","Counter","value","type","min","max","e","Specer","div","MiniSpecer","TopView","TopViewPhoto","Title","h2","Message","p","ButtonWrap","Hoom","history","push","ResultWrap","TestResult","h1","PointResult","TopBackButton","Result","total","hitory","useState","resultContent","setResultContent","useEffect","data","Question","subComent","selecter","text","shortid","generate","TestWrap","QuestionSub","AnserAlea","NextQuestionButton","Test","questionCount","setQuestionCount","questionItem","LastQuestionPattern","SwitchPattern","question","selecters","setTortal","displayResult","setDisplayResult","handleCheck","map","count","setCount","counterChange","useCallback","target","index","width","height","toString","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39cc8d5e.chunk.js","sourcesContent":["import { Button } from '@material-ui/core'\nimport React from 'react'\n\nconst SelectButton = (props) => {\n    return(\n        <Button\n            \n            variant={props.variant}\n            color={props.color}\n            label={props.label}\n            onClick={()=>props.onClick()}\n            style={props.style}\n        >\n            {props.label}\n        </Button>\n\n    )\n}\n\nexport default SelectButton","import { Checkbox } from '@material-ui/core'\nimport React from 'react'\nimport styled from 'styled-components'\n\n\nconst LabelSpan = styled.span`\n    font-size:3.3vw;\n\n`\n\nconst SelectCheckBox = (props) => {\n    return(\n        <>\n            <Checkbox\n                color='primary'\n                \n                onChange={()=>props.onChange(props.point,props.state,props.id)}\n            />\n            <LabelSpan>{props.label}</LabelSpan>\n        </>\n\n    )\n}\n\nexport default SelectCheckBox","import React from 'react'\nimport styled from 'styled-components'\n\nconst DaialInput =styled.input`\n    width:100px;\n   \n`\n\n\n\nconst Counter = (props) =>{\n    return(\n        <DaialInput\n            value={props.value} \n            type='number'\n            min={0}\n            max={10}\n            onChange={(e)=>props.onChange(e)}\n        />\n    )\n}\n\nexport default Counter","import React from 'react'\nimport styled from 'styled-components'\n\n\nconst Specer = styled.div`\n    width:100%;\n    height:15px;\n    margin:0;\n    padding:0;\n`\n\n\nconst MiniSpecer = () =>{\n    return(\n        <Specer></Specer>\n    )\n}\n\nexport default MiniSpecer\n","export default __webpack_public_path__ + \"static/media/wheelchair-3948122_1920.4a7f71ea.jpg\";","import React from 'react'\nimport styled from 'styled-components'\nimport { SelectButton } from '../questionItem'\nimport TopViewPhoto from '/Users/takahashiyuusei/HDS-R  var2/hdsr/src/img/wheelchair-3948122_1920.jpg'\n\nconst TopView = styled.div`\n    height:100vh;\n    background-image:url(${TopViewPhoto});\n    background-size:cover;\n    background-position:45% 10%; \n    position: relative;  \n    color:#422525;\n    font-family: \"M PLUS 1p\";\n`\n\nconst Title = styled.h2`\n    margin:0;\n    position: absolute;\n    top:30%;\n    left:10px;\n    @media (min-width:600px){\n        font-size:50px;\n    }  \n`\nconst Message = styled.p`\n    font-size:12px;\n    margin:0;\n    position: absolute;\n    top:20%;\n    left:20%;\n    @media (min-width:600px){\n        font-size:24px;\n    }  \n`\nconst ButtonWrap = styled.div`\n    color:#ffff;\n    position:absolute;\n    top:90%;\n    left: 50%;\n    transform: translateX(-50%);\n    -webkit-transform: translateX(-50%);\n    -ms-transform: translateX(-50%);\n    :hover{\n        background-color: #59b1eb;\n    }\n    \n`\n\nconst Hoom =({history})=>{\n\n    const handleClick = () =>{\n      history.push('/test')\n    }\n\n    return (\n        <TopView>\n            <Title>HDS-R　TEST</Title>\n            <Message>登録不要。すぐに使えるシンプルなアプリ</Message>\n            <ButtonWrap>\n                <SelectButton\n                    label={'START'}\n                    color={'inherit'}\n                    variant={'outlined'}\n                    onClick={()=>handleClick()}\n                />\n            </ButtonWrap>\n        </TopView>\n    )\n}\n\nexport default Hoom","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { MiniSpacer, SelectButton } from '../questionItem'\n\nconst ResultWrap = styled.div`\n    height:100vh;\n    background: radial-gradient(#F2B9A1, #EA6264);\n    font-family: \"M PLUS 1p\";\n    color:#FFFF;\n    padding:0 10px 0 10px;\n    \n    `\nconst TestResult = styled.h1`\n    margin: 0 ;\n    text-align:center;\n`\nconst PointResult = styled.h2`\n    text-align:center;\n`\nconst TopBackButton = styled.div`\n    text-align:center;\n`\n\nconst Result = ({total,hitory}) => {\n    const [resultContent,setResultContent]=useState('')  \n    useEffect(()=>{\n        if(total<10){\n            setResultContent('重度の認知症の恐れがあります。然るべき医療機関を受診し、再検査をおすすめします。')\n        }else if(total<15){\n            setResultContent('中度の認知症の恐れがありますので然るべき医療機関への受診をおすすめします')\n        }else if(total<20){\n            setResultContent('軽度の認知症の疑いがあります。然るべき医療機関にて再検査をおすすめします')\n        }else if(total<30){\n            setResultContent('認知症の可能性は低く,健常者と同等の点数です。')\n        }\n    },[total])\n    return(\n        <ResultWrap>\n            <TestResult>診断結果</TestResult>\n            <MiniSpacer/>\n            <PointResult>得点は{total}点</PointResult>\n            <MiniSpacer/>\n            <p>{resultContent}</p>\n            <TopBackButton>\n                <SelectButton\n                    variant = {'contained'}\n                    color = {'secondary'}\n                    label = {'トップ画面に戻る'}\n                    onClick={()=>hitory.push('/')}\n                />\n            </TopBackButton>\n        </ResultWrap>\n    )\n}\n\nexport default Result","import shortid from 'shortid'\n\nexport  const data =[\n    {\n        Question :  'お歳はいくつですか？',\n        subComent : '（2年までの誤差は正解）',\n        selecter : [\n                        {\n                            text:'２年の誤差の範囲内で年齢を答えることができた',\n                            point:1\n                        },\n                        {\n                            text:'答えられない、または３年以上の誤差がある年齢を答えた',\n                            point:0\n                        }\n                   ],\n        \n\n    },\n    \n    {\n        Question :  '今日は何年の何月何日ですか？何曜日ですか？',\n        subComent : '(年月日、曜日が正解でそれぞれ1点ずつ加点　正解したらそれぞれにチェックをつけてください)',\n        selecter :　[\n                        {\n                            text:'何年',\n                            point:1,\n                            state:false,\n                            id : shortid.generate()\n                        },\n                        {\n                            text:'何月',\n                            point:1,\n                            state:false,\n                            id : shortid.generate()\n                        },\n                        {\n                            text:'何日',\n                            point:1,\n                            state:false,\n                            id : shortid.generate()\n                        },\n                        {\n                            text:'何曜日',\n                            point:1,\n                            state:false,\n                            id : shortid.generate()\n                        }\n                    ],\n        id : shortid.generate()\n    },\n    \n    {\n        Question :  '私たちが今いるところは、どこですか？',\n        subComent : '（自発的にできれば2点、5秒おいて家ですか？病院ですか？施設ですか？の中から正しい選択をすれば1点）',\n        selecter : [\n                        {\n                            text:'自発的にできた',\n                            point:2\n                        },\n                        {\n                            text:'問いかけの後に正解の場所を答えることができた',\n                            point:1\n                        },\n                        {\n                            text:'誤った場所を答える。または答えることができない',\n                            point:0\n                        }\n                    ],\n        id : shortid.generate()\n\n    },\n    \n    {\n        Question :  'これから言う3つの言葉を言ってみてください。またあとで聞きますのでよく覚えておいてください。',\n        subComent : '質問者は1または２から選んで質問し答えられたものにチェックをつけてください  1： a) 桜 b） 猫　c） 電車　 2： a）梅　b） 犬　c）自動車',\n        selecter : [\n        {\n            text:'a) 桜 または　梅',\n            point:1,\n            state:false,\n            id : shortid.generate()\n        },\n        {\n            text:'b） 猫　または　犬',\n            point:1,\n            state:false,\n            id : shortid.generate()\n        },\n        {\n            text:'c） 電車　または　車',\n            point:1,\n            state:false,\n            id : shortid.generate()\n        }\n    ],\n        id : shortid.generate()\n\n    },\n    \n    {\n        Question :  '100から7を順番に引いてください。',\n        subComent : '（100-7は？それからまた7を引くと？と質問する。最初の答えが不正解の場合、打ち切る）',\n        selecter : [\n                        {\n                            text:'93　と答えた後に　86 と答えられた',\n                            point:2\n                            \n                        },\n                        {\n                            text:' 93　のみ答えられた',\n                            point:1\n                        },\n                        {\n                            text:' 93 と答えられなかった',\n                            point:0\n                        }\n                    ],\n        id : shortid.generate()\n\n    },\n    \n    {\n        Question :  '私がこれから言う数字を逆から言ってください。',\n        subComent : '6・8・2　と　3・5・2・9 をそれぞれ１つずつ逆順に言ってもらう。答えることができた場合はチェックをつける。3桁逆唱に失敗したら、打ち切る。',\n        selecter :　[\n            {\n                text:'2・8・6　を言うことができた',\n                point:1,\n                state:false,\n                id : shortid.generate()\n            },\n            {\n                text:'9・2・5・3　を言うことができた',\n                point:1,\n                state:false,\n                id : shortid.generate()\n            },\n            \n        ],\n        id : shortid.generate()\n\n    },\n    \n    {\n        Question :  '先ほど覚えてもらった言葉をもう一度言ってみてください。と質問し該当するものにチェックしてください　各２点'　,\n        subComent : '全て自発的に答えられた場合は次の質問は飛ばしてください ',\n        selecter : [\n            {\n                text:'a) 桜 または　梅　を自発的に答えられた',\n                 point:2,\n                 state:false,\n                id : shortid.generate()\n            },\n            {\n                text:'b） 猫　または　犬　を自発的に答えられた',\n                 point:2,\n                 state:false,\n                id : shortid.generate()\n            },\n            {\n                text:'c） 電車　または　車　を自発的に答えられた',\n                point:2,\n                state:false,\n                id : shortid.generate()\n            }\n        ],\n        id : shortid.generate()\n\n    },\n    {\n        Question :  '前回の質問でわからなかった、もしくは答えられなかったものを対象に以下のヒントを与えて。再度回答を促してください',\n        subComent : ' ヒント　a）植物　b）動物　c）乗り物 ＊前回の質問時に全て自発的に答えられた場合は次の質問へをクリック',\n        selecter : [\n            {\n                text:'a) 桜 または　梅　をヒントを用いて答えられた',\n                point:1,\n                state:false,\n                id : shortid.generate()\n            },\n            {\n                text:'b） 猫　または　犬　をヒントを用いて答えられた',\n                point:1,\n                state:false,\n                id : shortid.generate()\n            },\n            {\n                text:'c） 電車　または　車　をヒントを用いて答えられた',\n                point:1,\n                state:false,\n                id : shortid.generate()\n            }\n        ],\n        id : shortid.generate()\n\n    },\n\n    \n    {\n        Question :  'これから5つの品物を見せます。それを隠しますので、なにがあったか言ってください。と質問し正解数に適したボタンをクリックしてください',\n        subComent : '（時計、鍵、タバコ、ペン、硬貨　など必ず相互に無関係なもの）',\n        selecter : [\n                        {\n                            text:'正解数 ０',\n                            point:0\n                        },\n                        {\n                            text:'正解数　１',\n                            point:1\n                        },\n                        {\n                            text:'正解数　２',\n                            point:2\n                        },\n                        {\n                            text:'正解数　３',\n                            point:3\n                        },\n                        {\n                            text:'正解数　４',\n                            point:4\n                        },\n                        {\n                            text:'正解数　５',\n                            point:5\n                        }\n                    ],\n        id : shortid.generate()\n        \n    },\n    \n    {\n        Question :  '知っている野菜の名前をできるだけ多く言ってください。',\n        subComent : '画面の空欄右をクリックして答えた数をカウントしてください。途中で詰まり、約10秒間待っも出ない場合や１０個以上上がった場合、そこで終了ボタンを押してください,スマホの方は0~10までの答えられた数を入力して下さい！',\n        id : shortid.generate()\n        \n    },\n    \n]","import React, { useCallback, useState } from 'react'\nimport { Counter, MiniSpacer, SelectButton, SelectCheckBox} from '../questionItem'\nimport Result from './Result'\nimport {data} from '.././data'\nimport styled from 'styled-components'\n\n\nconst TestWrap = styled.div`\n    height:117vh;\n    background: radial-gradient(#F2B9A1, #EA6264);\n    font-family: \"M PLUS 1p\";\n    color:#FFFF;\n    padding:0 10px 0 10px;\n    position: relative;\n   \n`\nconst Question = styled.h2`\n    display:flex;\n    justify-content:center;\n    margin:0;\n    font-size:5vw;\n    @media (min-width:600px){\n        font-size:4vw;\n    }\n`\nconst QuestionSub = styled.p`\n    margin: 0;\n    font-size:15px;\n    display:flex;\n    justify-content:center;\n`\nconst AnserAlea = styled.div`\n    position: absolute;\n    top: 70%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    -webkit-transform: translate(-50%, -50%);\n    -ms-transform: translate(-50%, -50%);\n    display:flex;\n    flex-direction:column;\n    justify-content:space-around;\n    align-items:center;\n`\nconst NextQuestionButton = styled.div`\n    text-align:center;\n`\n\n\n\n\nconst Test = ({history}) => {\n    const [questionCount,setQuestionCount]=useState(0)\n    const questionItem = data[questionCount]\n   \n    const LastQuestionPattern = (questionCount !== 9)\n    const SwitchPattern = (questionCount === 0 ||questionCount=== 2 || questionCount === 4 || questionCount === 8)\n    const question = questionItem.Question\n    const subComent = questionItem.subComent\n    const selecters = questionItem.selecter\n   const [total,setTortal]= useState(0)\n   const [displayResult,setDisplayResult]=useState(false)\n   \n   const SelectButtonClick = (point) => {\n       setQuestionCount(questionCount + 1)\n       setTortal(total + point)\n    }\n    \n    const handleCheck = (point,state,id) =>{\n        selecters.map(selecter=>{\n            if(selecter.id === id){\n                selecter.state=!state\n                if(selecter.state === true){\n                    setTortal(total + point)\n                }else if(selecter.state === false)\n                setTortal( total - point)\n            }\n            return selecter\n        })\n    }\n    \n    const handleClick = ()=> {\n        setQuestionCount(questionCount + 1)\n        \n    }\n    const [count,setCount]=useState(0)\n    const counterChange = useCallback((e) =>{\n        setCount(e.target.value)\n    },[setCount])\n\n    const ResultGo = () =>{ \n        if(count === '6' ){\n            setTortal(total + 1)\n        }\n        else if(count === '7'){\n           setTortal(total + 2)\n        }\n        else if(count === '8'){\n            setTortal(total + 3)\n        }\n        else if(count === '9'){\n            setTortal(total + 4)\n        }\n        else if(count === '10'){\n            setTortal(total + 5)\n        }  \n        setDisplayResult(true)\n    }\n    return(\n        <>\n            {\n                !displayResult && (\n                    <TestWrap>\n                            <MiniSpacer/>\n                            <Question>{question}</Question>\n                            <QuestionSub>{subComent}</QuestionSub>\n                            {\n                                LastQuestionPattern ?\n                                <>\n                                    {\n                                        SwitchPattern ? \n                                        <AnserAlea>\n                                            {\n                                                selecters.map((selecter,index)=>\n                                                <div>\n                                                    <SelectButton\n                                                        variant = {'contained'}\n                                                        color = {'secondary'}\n                                                        label={selecter.text}\n                                                        key={index.toString()}\n                                                        onClick={()=>SelectButtonClick(selecter.point)}\n                                                        style={{width: '80vw', height: '10vh' }}\n                                                    />\n                                                    <MiniSpacer/>\n                                                </div>\n                                                \n                                                )\n                                            }\n                                        </AnserAlea>\n                                        :\n                                        <>\n                                        <MiniSpacer/>\n                                        <MiniSpacer/>\n                                            {\n                                                selecters.map((selecter,index)=>\n                                                <div>\n                                                    <SelectCheckBox\n                                                        label={selecter.text}\n                                                        key={selecter.id}\n                                                        onChange={handleCheck}\n                                                        point={selecter.point}\n                                                        state={selecter.state}\n                                                        id={selecter.id}\n                                                    />\n                                                </div> \n                                                )\n                                            }\n                                            <NextQuestionButton>\n                                                <SelectButton\n                                                    label='次の問題へ'\n                                                    onClick={()=>handleClick()}\n                                                    variant = {'contained'}\n                                                    color = {'secondary'}\n                                                    \n                                                />\n                                            </NextQuestionButton>\n                                        </>\n                                    }\n                                </>\n                                :\n                                <AnserAlea>\n                                    <Counter\n                                        value={count}\n                                        onChange={counterChange}\n                                    />\n                                    <MiniSpacer/>\n                                    <SelectButton\n                                                label='テストを終了し、診断結果へ'\n                                                onClick={()=>ResultGo()}\n                                                variant = {'contained'}\n                                                color = {'secondary'}\n                                    />\n                                </AnserAlea>\n                            }\n                    </TestWrap>\n                )\n            }\n            {\n                displayResult && (\n                    <Result\n                        hitory={history} \n                        total={total}\n                        \n                    />\n                )\n                \n            }\n\n\n        </>\n    )\n}\n\nexport default Test","import React from 'react'\nimport './style.css'\nimport {\n    HashRouter,\n    Switch,\n    Route\n} from 'react-router-dom'\nimport { Hoom, Test } from './pages'\n\nconst App =()=>{\n    return(\n\n        <HashRouter>\n            <Switch>\n                <Route exact path='/' component={Hoom}/>\n                <Route exact path='/test'component={Test}/>\n            </Switch>\n        </HashRouter>\n  \n    )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport React from 'react'\nimport App from './App'\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n)"],"sourceRoot":""}